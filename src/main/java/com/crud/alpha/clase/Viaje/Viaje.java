package com.crud.alpha.clase.Viaje;

import com.crud.alpha.clase.Localidad.Localidad;
import com.crud.alpha.clase.Omnibus.Omnibus;
import com.crud.alpha.clase.Pasaje.Pasaje;
import com.crud.alpha.clase.Usuarios.Vendedor.Vendedor;
import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.LastModifiedDate;
import org.springframework.data.jpa.domain.support.AuditingEntityListener;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

@Entity
@EntityListeners(AuditingEntityListener.class)
@Table(name = "Viaje")
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
public class Viaje {
    // *** Autogenerated
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @CreatedDate
    private LocalDateTime createdAt;

    @LastModifiedDate
    private LocalDateTime updatedAt;

    // *** Manual
    @Column(nullable = false)
    private LocalDateTime fechaPartida;

    @Column(nullable = false)
    private LocalDateTime fechaLlegada;

    @Column(nullable = false)
    private boolean cerrado;

    @Column(nullable = false)
    private float precio;

    // Fk tabla y relacion con Omnibus
    @ManyToOne
    @JoinColumn(nullable = false, name = "id_omnibus_asignado", referencedColumnName = "id") // id es la PK de Omnibus
    private Omnibus omnibusAsignado;

    // Fk tabla y relacion con Vendedor
    @ManyToOne
    @JoinColumn(name = "registered_by", referencedColumnName = "clerkId") // esta columna estar√° en la tabla Omnibus
    private Vendedor registeredBy;


    // FK tabla y relacion con Localidad // PENSADO PARA LOCALIDAD DONDE INICIA EL VIAJE
    @ManyToOne
    @JoinColumn(nullable = false, name = "localidad_origen", referencedColumnName = "id")
    private Localidad localidadOrigen;


    // FK tabla y relacion con Localidad // PENSADO PARA LOCALIDAD DONDE FINALIZA EL VIAJE
    @ManyToOne
    @JoinColumn(nullable = false, name = "localidad_destino", referencedColumnName = "id")
    private Localidad localidadDestino;

    // ** FK Tabla y relacion con Pasaje
    @OneToMany(mappedBy = "id", fetch = FetchType.LAZY)
    private List<Pasaje> pasajes = new ArrayList<>();

}