package com.crud.alpha.clase.Omnibus;

import com.crud.alpha.clase.Localidad.UltimaLocalidad;
import com.crud.alpha.clase.Omnibus.dto.NewOmnibusDTO;
import com.crud.alpha.clase.Usuarios.Vendedor.Vendedor;
import com.crud.alpha.enums.EstadoOmnibus;
import jakarta.persistence.*;
import lombok.*;
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.LastModifiedDate;
import org.springframework.data.jpa.domain.support.AuditingEntityListener;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

@Entity
@EntityListeners(AuditingEntityListener.class)
@Table(name = "Omnibus")
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
public class Omnibus {
// Importante no nombrar atributos utilizando '_' (piso/barra baja)

    // *** Autogenerated
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    // *** Manual
    @Column(nullable = false, unique = true)
    private int nroCoche;

    @Column(nullable = false)
    private String descripcion;

    @Column(nullable = false)
    @Enumerated(EnumType.STRING)
    private EstadoOmnibus estado;

    @Column(nullable = false)
    private boolean accesibilidad;

    @CreatedDate
    private LocalDateTime createdAt;

    @LastModifiedDate
    private LocalDateTime updatedAt;


    // *** FK de Tabla y relacion con Mantenimiento
    @OneToMany(mappedBy = "id", fetch = FetchType.LAZY)
    private List<Mantenimiento> Mantenimientos;

    // *** FK de Tabla y relacion con Vendedor
    @ManyToOne
    @JoinColumn(name = "registered_by", referencedColumnName = "clerkId") // esta columna estar√° en la tabla Omnibus
    private Vendedor registeredBy;

    // *** FK de Tabla y relacion con Ultimalocalidad (UltimaLocalidad en la que estuvo el bus presente, AKA su ultima ubicacion registrada)
    @OneToMany(mappedBy = "omnibus") // mappedby indica a la tabla que la columna de esta relacion no se genera en Omnibus, si no en UltimaLocalidad.
    private List<UltimaLocalidad> ultimasLocalidades = new ArrayList<>();


    // *** FK de Tabla y relacion con Asiento
    @OneToMany(mappedBy = "omnibus", fetch = FetchType.LAZY)
    private List<Asiento> asientos;

    public Omnibus (NewOmnibusDTO dto) {
        this.nroCoche = dto.getNroCoche();
        this.descripcion = dto.getDescripcion();
        this.estado = dto.getEstado();
        this.accesibilidad = dto.isAccesibilidad();
    }

}