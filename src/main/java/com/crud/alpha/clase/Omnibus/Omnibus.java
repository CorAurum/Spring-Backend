package com.crud.alpha.clase.Omnibus;

import com.crud.alpha.clase.Pasaje.Pasaje;
import com.crud.alpha.clase.Usuarios.Vendedor.Vendedor;
import com.crud.alpha.enums.EstadoOmnibus;
import com.crud.alpha.clase.Localidad.ultimaLocalidad;
import jakarta.persistence.*;
import lombok.*;

import java.util.ArrayList;
import java.util.List;


//Modelado de la clase y tabla usuarios, @Tabla le da el nombre a la tabla, los demas @ nos ahorran declarar los getters
//Setters y constructor vacio y con argumentos.
// el @Id establece que atributo va a ser la clave primaria y el Identity hace que cada nuevo ID autogenerado sea el siguiente del anterior.

@Entity
@Table(name = "Omnibus")
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
public class Omnibus {
// Importante no nombrar atributos utilizando '_' (piso/barra baja)

    // *** Autogenerated
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    // *** Manual

    @Column(nullable = false)
    private boolean activo;

    @Column(nullable = true)
    private int cantAsientos;

    @Column(nullable = true)
    private String descripcion;

    @Column(nullable = false)
    private int nroCoche;

    @Column(nullable = false)
    private EstadoOmnibus estado;

    @Column(nullable = false)
    private boolean accesibilidad;

    // *** FK de Tabla y relacion con Mantenimiento

    @OneToMany(mappedBy = "id", fetch = FetchType.LAZY) // Opcional
    private List<Mantenimiento> Mantenimientos;

    // *** FK de Tabla y relacion con Vendedor

    @ManyToOne
    @JoinColumn(name = "vendedor_Id") // esta columna estar√° en la tabla Omnibus
    private Vendedor vendedorId;

    // *** FK de Tabla y relacion con Ultimalocalidad (UltimaLocalidad en la que estuvo el bus presente, AKA su ultima ubicacion registrada)

    @OneToMany(mappedBy = "omnibus") // mappedby indica a la tabla que la columna de esta relacion no se genera en Omnibus, si no en UltimaLocalidad.
    private List<ultimaLocalidad> ultimasLocalidades = new ArrayList<>();


    // *** FK de Tabla y relacion con Asiento

    @OneToMany(mappedBy = "id", fetch = FetchType.LAZY) // Opcional
    private List<Asiento> Asientos;


}