package com.crud.alpha.clase.Pasaje;

import com.crud.alpha.clase.Omnibus.Asiento;
import com.crud.alpha.clase.Viaje.Viaje;
import jakarta.persistence.*;
import lombok.*;
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.LastModifiedDate;
import org.springframework.data.jpa.domain.support.AuditingEntityListener;

import java.time.LocalDateTime;


//Modelado de la clase y tabla usuarios, @Tabla le da el nombre a la tabla, los demas @ nos ahorran declarar los getters
//Setters y constructor vacio y con argumentos.
// el @Id establece que atributo va a ser la clave primaria y el Identity hace que cada nuevo ID autogenerado sea el siguiente del anterior.

@Entity
@EntityListeners(AuditingEntityListener.class)
@Table(name = "Pasaje")
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
public class Pasaje {
// Importante no nombrar atributos utilizando '_' (piso/barra baja)

    // *** Autogenerated
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    // *** Manual

    @CreatedDate
    private LocalDateTime createdAt;

    @LastModifiedDate
    private LocalDateTime updatedAt;

    // *** FK Tabla y relacion con Asiento
    @ManyToOne
    @JoinColumn(name = "asiento", referencedColumnName = "id")
    private Asiento asiento;

    // *** FK Tabla y relacion con VentaPasaje
    @ManyToOne
    @JoinColumn(name = "id_venta_pasaje", referencedColumnName = "id")
    private VentaPasaje ventaPasaje;

    // *** FK Tabla y relacion con Viaje
    @ManyToOne
    @JoinColumn(name = "id_viaje", referencedColumnName = "id")  // id seria el atributo PK de Viaje, idViaje es el nombre que tendra en la BD este atributo.
    private Viaje viaje;


}