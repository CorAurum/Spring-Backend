package com.crud.alpha.clase.Pasaje;

import com.crud.alpha.clase.Usuarios.Cliente.Cliente;
import com.crud.alpha.clase.Usuarios.Vendedor.Vendedor;
import com.crud.alpha.clase.Viaje.Viaje;
import jakarta.persistence.*;
import lombok.*;
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.LastModifiedDate;
import org.springframework.data.jpa.domain.support.AuditingEntityListener;

import java.time.LocalDateTime;
import java.util.List;


//Modelado de la clase y tabla usuarios, @Tabla le da el nombre a la tabla, los demas @ nos ahorran declarar los getters
//Setters y constructor vacio y con argumentos.
// el @Id establece que atributo va a ser la clave primaria y el Identity hace que cada nuevo ID autogenerado sea el siguiente del anterior.

@Entity
@EntityListeners(AuditingEntityListener.class)
@Table(name = "VentaPasaje")
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
public class VentaPasaje {
// Importante no nombrar atributos utilizando '_' (piso/barra baja)

    // *** Autogenerated
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    // *** Manual
    @Column(nullable = true)
    private Long paymentId; // paymentId de mercadopago

    @Column(nullable = false)
    private LocalDateTime fechaVenta; // Aca le agregue LocalDateTime que nos da tanto hora como fecha para tener mas precision con el manejo.

    @Column(nullable = false)
    private String paymentStatus;

    @CreatedDate
    private LocalDateTime createdAt;

    @LastModifiedDate
    private LocalDateTime updatedAt;


    // *** FK Vendedor
    @ManyToOne
    @JoinColumn(nullable = true,name = "sellerId", referencedColumnName = "clerkId")
    private Vendedor sellerId;

    // *** FK Cliente
    @ManyToOne
    @JoinColumn(nullable = true,name = "buyerId", referencedColumnName = "clerkId")
    private Cliente buyerId;


    // *** Fk Pasaje
    @OneToMany(mappedBy = "ventaPasaje")
    private List<Pasaje> idPasaje;

    // *** Fk Viaje
    @ManyToOne
    @JoinColumn(name = "precioViaje", referencedColumnName = "precio")  // id seria el atributo PK de Viaje, idViaje es el nombre que tendra en la BD este atributo.
    private Viaje precioViaje;


}




